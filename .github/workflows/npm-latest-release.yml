name: NPM Latest Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.14.1

      - name: Extract version from tag
        id: extract_version
        run: |
          TAG=${GITHUB_REF#refs/tags/v}
          echo "version=$TAG" >> $GITHUB_OUTPUT
          echo "Extracted version: $TAG"

      - name: Check version matches package.json
        run: |
          TAG_VERSION="${{ steps.extract_version.outputs.version }}"

          # Check packages/*/package.json versions (excluding vue by default)
          for pkg in packages/*/; do
            # Skip vue package
            if [[ "$pkg" == "packages/vue/" ]]; then
              echo "Skipping vue package version check"
              continue
            fi
            
            if [ -f "$pkg/package.json" ]; then
              PKG_VERSION=$(node -p "require('./$pkg/package.json').version")
              if [ "$PKG_VERSION" != "$TAG_VERSION" ]; then
                echo "Package $pkg version ($PKG_VERSION) does not match tag version ($TAG_VERSION)"
                exit 1
              fi
            fi
          done

          echo "All package versions match tag version: $TAG_VERSION"

      - name: Install dependencies
        run: bun i

      - name: Build packages
        run: bun run build

      - name: Publish packages
        run: bun run publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          CI: true
